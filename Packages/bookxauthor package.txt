create or replace package control_bookxauthor is
PROCEDURE insert_bookxauthor (pid_author IN NUMBER, pid_book NUMBER);
PROCEDURE remove_bookxauthor (pid_book in NUMBER);
PROCEDURE update_bxa_id_author(pid_book IN NUMBER, pnewid NUMBER);
PROCEDURE update_bxa_id_book(pid_book IN NUMBER, pnewid NUMBER);
FUNCTION getbookxauthorIdauthor(pid_book IN NUMBER) RETURN NUMBER;
FUNCTION getbookxauthorIdbook(pid_author IN NUMBER) RETURN NUMBER;


end control_bookxauthor;
/
create or replace PACKAGE BODY control_bookxauthor IS

PROCEDURE insert_bookxauthor (pid_author IN NUMBER, pid_book NUMBER)AS
begin
    insert into bookxauthor(id_author,id_book)
    values (pid_author,pid_book);
    commit;
end insert_bookxauthor;


PROCEDURE remove_bookxauthor (pid_book IN NUMBER)AS
e_invalid_exc EXCEPTION;
begin
    delete from bookxauthor
    where  id_book = pid_book;
    commit;
    IF SQL%NOTFOUND THEN 
        RAISE e_invalid_exc;
    END IF;
    EXCEPTION
    WHEN e_invalid_exc THEN
        DBMS_OUTPUT.PUT_LINE('No such row.');
        DBMS_OUTPUT.PUT_LINE(SQLERRM);
        DBMS_OUTPUT.PUT_LINE(SQLCODE);
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('An error has ocurred in the attempt to remove.');
        DBMS_OUTPUT.PUT_LINE(SQLERRM);
        DBMS_OUTPUT.PUT_LINE(SQLCODE);
end remove_bookxauthor;

PROCEDURE update_bxa_id_author(pid_book IN NUMBER, pnewid NUMBER)AS
e_invalid_exc EXCEPTION;
begin
    update bookxauthor
    set id_author=pnewid
    where id_book=pid_book;
    commit;
    IF SQL%NOTFOUND THEN 
        RAISE e_invalid_exc;
    END IF;
    EXCEPTION
    WHEN e_invalid_exc THEN
        DBMS_OUTPUT.PUT_LINE('No such row.');
        DBMS_OUTPUT.PUT_LINE(SQLERRM);
        DBMS_OUTPUT.PUT_LINE(SQLCODE);
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('An error has ocurred in the attempt to update.');
        DBMS_OUTPUT.PUT_LINE(SQLERRM);
        DBMS_OUTPUT.PUT_LINE(SQLCODE);
end update_bxa_id_author;

PROCEDURE update_bxa_id_book(pid_book IN NUMBER, pnewid NUMBER)AS
e_invalid_exc EXCEPTION;
begin
    update bookxauthor
    set id_book=pnewid
    where id_book=pid_book;
    commit;
    IF SQL%NOTFOUND THEN 
        RAISE e_invalid_exc;
    END IF;
    EXCEPTION
    WHEN e_invalid_exc THEN
        DBMS_OUTPUT.PUT_LINE('No such row.');
        DBMS_OUTPUT.PUT_LINE(SQLERRM);
        DBMS_OUTPUT.PUT_LINE(SQLCODE);
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('An error has ocurred in the attempt to update.');
        DBMS_OUTPUT.PUT_LINE(SQLERRM);
        DBMS_OUTPUT.PUT_LINE(SQLCODE);
end update_bxa_id_book;



FUNCTION getbookxauthorIdauthor(pid_book IN NUMBER) RETURN NUMBER
is vcName number(30);
begin
    select id_author
    into vcName
    from bookxauthor
    where id_book=pid_book ;
    return (VCNAME);
    EXCEPTION
        WHEN TOO_MANY_ROWS THEN
        DBMS_OUTPUT.PUT_LINE ('Your SELECT statement retrieved multiple rows.');
        WHEN NO_DATA_FOUND THEN
        DBMS_OUTPUT.PUT_LINE ('Could not find a register with the name||pId.');
        WHEN STORAGE_ERROR THEN
        DBMS_OUTPUT.PUT_LINE ('PL/SQL ran out of memory or memory is corrupted.');
        WHEN VALUE_ERROR THEN
        DBMS_OUTPUT.PUT_LINE ('An arithmetic, conversion, truncation, or size constraint error ocurred.');
        WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE ('Unexpected error.');
END;


FUNCTION getbookxauthorIdbook(pid_author IN NUMBER) RETURN NUMBER
is vcID NUMBER(10);
begin
    select id_book
    into vcID 
    from bookxauthor
    where id_author=pid_author;
    return vcID;
    EXCEPTION
        WHEN TOO_MANY_ROWS THEN
        DBMS_OUTPUT.PUT_LINE ('Your SELECT statement retrieved multiple rows.');
        WHEN NO_DATA_FOUND THEN
        DBMS_OUTPUT.PUT_LINE ('Could not find a register with the name||pcanton.');
        WHEN STORAGE_ERROR THEN
        DBMS_OUTPUT.PUT_LINE ('PL/SQL ran out of memory or memory is corrupted.');
        WHEN VALUE_ERROR THEN
        DBMS_OUTPUT.PUT_LINE ('An arithmetic, conversion, truncation, or size constraint error ocurred.');
        WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE ('Unexpected error.');
end;



END control_bookxauthor;